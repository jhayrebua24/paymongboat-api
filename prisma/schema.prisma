// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
  binaryTargets   = ["native", "linux-arm64-openssl-1.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum CanalWays {
  one_way
  two_way
}

enum CanalDirections {
  northbound
  southbound
  northbound_southbound
}

enum CanalTypes {
  small
  medium
  large
}

enum ShipType {
  off_shore
  container
  bulk_carriers
}

model canals {
  id           Int            @id @default(autoincrement())
  name         String         @unique
  length       Float          @default(0) @db.Double
  ways         CanalWays      @default(one_way)
  canal_routes canal_routes[]
  size_id      Int?
  canal_size   canal_size?    @relation(fields: [size_id], references: [id])
}

model canal_routes {
  id        Int             @id @default(autoincrement())
  is_close  Boolean         @default(false)
  direction CanalDirections @default(southbound)
  ships     ships[]
  canals    canals?         @relation(fields: [canals_id], references: [id], onDelete: Cascade)
  canals_id Int?
}

model canal_size {
  id     Int        @id @default(autoincrement())
  name   CanalTypes @unique @default(small)
  canals canals[]
}

model ships {
  id             Int           @id @default(autoincrement())
  canal_route_id Int
  name           String        @unique
  type           ShipType      @default(off_shore)
  time_in        DateTime      @default(now())
  time_out       DateTime
  total_hrs      Float         @default(0) @db.Double
  excess_fee     Float         @default(0) @db.Double
  total_fee      Float         @default(0) @db.Double
  total_amount   Float         @default(0) @db.Double
  canal_routes   canal_routes? @relation(fields: [canal_route_id], references: [id], onDelete: Cascade)
}
